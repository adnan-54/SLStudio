<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--ExpandCollapseToggleStyle-->
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="18" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Root" Background="Transparent">
                        <Path x:Name="Collapsed" Fill="{StaticResource Foreground}" Style="{StaticResource UIShape.Right}" />
                        <Path x:Name="Expanded" Fill="{StaticResource Foreground}" Opacity="0" Style="{StaticResource UIShape.RightDown}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="Collapsed" Value="{StaticResource Focused}" />
                            <Setter Property="Fill" TargetName="Expanded" Value="{StaticResource Focused}" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" TargetName="Collapsed" Value="0" />
                            <Setter Property="Opacity" TargetName="Expanded" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="18" />
    </Style>

    <!--TreeViewItemFocusVisual-->
    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--StudioTreeViewItemStyle-->
    <Style x:Key="StudioTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
        <Setter Property="Foreground" Value="{StaticResource Foreground}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="3, 3, 3, 3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid x:Name="Root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ButtonColumn" MinWidth="16" Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <ToggleButton x:Name="Expander"
                                      ClickMode="Press"
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource ExpandCollapseToggleStyle}" />

                        <Border x:Name="IsDefault" Grid.Column="1" Grid.ColumnSpan="2"
                                Background="Transparent" BorderBrush="Transparent" BorderThickness="1" />

                        <Border x:Name="Content"
                                Grid.Column="1" Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="PART_Header" ContentSource="Header"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Border>

                        <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource HoverForeground}" />
                            <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource HoverBackground}" />
                            <Setter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource HoverBorder}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsSelectionActive" Value="False" />
                            </MultiTrigger.Conditions>

                            <Setter Property="Foreground" Value="{StaticResource Foreground}" />
                            <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource HoverBackground}" />
                            <Setter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource HoverBackground}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="Content" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>

                            <Setter Property="Foreground" Value="{StaticResource HoverForeground}" />
                            <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource HoverBackground}" />
                            <Setter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource HoverBackground}" />
                        </MultiTrigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource SelectionForeground}" />
                            <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource SelectionBackground}" />
                            <Setter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource SelectionBorder}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Content" Value="{StaticResource DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>