<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:local="clr-namespace:SLStudio.Core.Resources.Controls">

    <ControlTemplate x:Key="BaseButtonTemplate" TargetType="{x:Type ButtonBase}">
        <Border x:Name="Border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding metro:ControlsHelper.CornerRadius}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <metro:ContentControlEx x:Name="PART_ContentPresenter"
                                    Padding="{TemplateBinding Padding}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(metro:ControlsHelper.ContentCharacterCasing)}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    RecognizesAccessKey="{TemplateBinding metro:ControlsHelper.RecognizesAccessKey}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoverBackground}" />
            </Trigger>

            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Background" Value="{StaticResource HoverBackground}" />
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Focused}" />
                <Setter Property="Foreground" Value="{StaticResource SelectionForeground}" />
            </Trigger>

            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource Focused}" />
                <Setter Property="Foreground" Value="{StaticResource SelectionForeground}" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource Border}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource Foreground}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="Padding"  Value="3" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ExpanderHeaderFocusVisual}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template" Value="{StaticResource BaseButtonTemplate}" />
    </Style>

    <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" TargetType="{x:Type ToggleButton}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource Border}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource Foreground}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="Padding"  Value="3" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ExpanderHeaderFocusVisual}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template" Value="{StaticResource BaseButtonTemplate}" />
    </Style>

    <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}" BasedOn="{StaticResource {x:Type CheckBox}}" TargetType="{x:Type CheckBox}" />

    <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}" BasedOn="{StaticResource {x:Type RadioButton}}" TargetType="{x:Type RadioButton}" />

    <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}" />

    <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}" BasedOn="{StaticResource {x:Type ComboBox}}" TargetType="{x:Type ComboBox}" />

    <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="MinWidth" Value="2" />
        <Setter Property="Background" Value="{StaticResource Delimiter}" />
        <Setter Property="BorderThickness" Value="1, 0, 0, 0" />
        <Setter Property="BorderBrush" Value="{StaticResource Button.Background}" />
    </Style>

    <!--StudioToolBarStyle-->
    <Style x:Key="StudioToolBarTrayStyle" TargetType="{x:Type ToolBarTray}">
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <!--StudioToolBarStyle-->
    <Style x:Key="StudioToolBarStyle" TargetType="{x:Type ToolBar}" BasedOn="{StaticResource MahApps.Styles.ToolBar}">
        <Setter Property="Background" Value="Red" />
    </Style>
</ResourceDictionary>