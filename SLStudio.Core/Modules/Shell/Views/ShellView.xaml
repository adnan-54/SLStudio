<studio:StudioWindow  x:Class="SLStudio.Core.Modules.Shell.Views.ShellView"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:studio="clr-namespace:SLStudio.Core"
                      xmlns:behaviors="clr-namespace:SLStudio.Core.Behaviors"
                      xmlns:docking="clr-namespace:SLStudio.Core.Docking"
                      xmlns:converters="clr-namespace:SLStudio.Core.Converters"
                      xmlns:menus="clr-namespace:SLStudio.Core.Menus"
                      xmlns:avalonDock="https://github.com/Dirkster99/AvalonDock"
                      mc:Ignorable="d">

    <studio:StudioWindow.TitleTemplate>
        <DataTemplate>
            <Grid />
        </DataTemplate>
    </studio:StudioWindow.TitleTemplate>
    <!--Behaviors-->
    <dxmvvm:Interaction.Behaviors>
        <behaviors:StudioShellBehavior />
        <dxmvvm:FocusBehavior />
    </dxmvvm:Interaction.Behaviors>

    <!--TitleBar-->
    <studio:StudioWindow.LeftWindowCommands>
        <metro:WindowCommands ShowSeparators="False">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                <!--MainMenu-->
                <Menu IsMainMenu="True">
                    <!--Resources-->
                    <Menu.Resources>
                        <!--Styles-->
                        <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}" x:Shared="False">
                            <Setter Property="Header" Value="{Binding DisplayName}" />
                            <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
                            <Setter Property="Tag" Value="{Binding Path}" />
                            <Setter Property="Command" Value="{Binding Command}" />
                            <Setter Property="CommandParameter" Value="{Binding Parameter}" />
                            <Setter Property="Visibility" Value="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Visible}}" />
                            <Setter Property="ToolTip" Value="{Binding ToolTip}" />
                            <Setter Property="InputGestureText" Value="{Binding Shortcut, Converter={StaticResource KeyGestureToTextConverter}}" />
                            <Setter Property="Icon">
                                <Setter.Value>
                                    <Image Source="{Binding IconSource, Converter={StaticResource ImageSourceConverter}}" />
                                </Setter.Value>
                            </Setter>

                            <!--Triggers-->
                            <Style.Triggers>
                                <!--Separator-->
                                <DataTrigger Binding="{Binding Converter={menus:MenuItemConverter}, ConverterParameter={x:Static menus:MenuItemTypes.Separator}}" Value="True">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Separator>
                                                    <Separator.Style>
                                                        <Style TargetType="{x:Type Separator}" BasedOn="{StaticResource ResourceKey={x:Static MenuItem.SeparatorStyleKey}}" />
                                                    </Separator.Style>
                                                </Separator>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>

                                <!--Toggle-->
                                <DataTrigger Binding="{Binding Converter={menus:MenuItemConverter}, ConverterParameter={x:Static menus:MenuItemTypes.Toggle}}" Value="True">
                                    <Setter Property="IsCheckable" Value="True" />
                                    <Setter Property="IsChecked" Value="{Binding IsChecked}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>

                        <!--HierarchicalDataTemplate-->
                        <HierarchicalDataTemplate DataType="{x:Type menus:MenuItem}" ItemsSource="{Binding Children}" />
                    </Menu.Resources>

                    <!--Behaviors-->
                    <dxmvvm:Interaction.Behaviors>
                        <menus:MenuManagerService />
                    </dxmvvm:Interaction.Behaviors>
                </Menu>

                <!--SearchBox-->
                <TextBox Margin="{StaticResource LargeLeftMargin}" Padding="3, 1, 3, 1"
                         Style="{StaticResource MahApps.Styles.TextBox.Search}"
                         MinHeight="10" Height="22" Width="200"
                         VerticalAlignment="Center" VerticalContentAlignment="Center"
                         studio:WpfHelpers.Watermark="Test"
                         Visibility="Collapsed" />

                <!--SolutionName-->
                <TextBlock Margin="{StaticResource LargeLeftMargin}" Padding="6, 3, 6, 3"
                           Text="Test" VerticalAlignment="Center"
                           Background="{StaticResource MahApps.Brushes.SemiTransparent}"
                           Visibility="Collapsed" />
            </StackPanel>
        </metro:WindowCommands>
    </studio:StudioWindow.LeftWindowCommands>

    <!--Content-->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!--ToolBar-->
        <ToolBarTray Grid.Row="0">
            <ToolBar>
                <Separator />
            </ToolBar>
        </ToolBarTray>

        <!--AvalonDock-->
        <avalonDock:DockingManager Grid.Row="1" 
                                   ActiveContent="{Binding SelectedItem, Mode=TwoWay}"
                                   AnchorablesSource="{Binding Tools}" 
                                   DocumentsSource="{Binding Documents}" 
                                   AllowMixedOrientation="True">
            <!--Resources-->
            <avalonDock:DockingManager.Resources>
                <Style TargetType="{x:Type Menu}" BasedOn="{StaticResource StudioMenuStyle}" />
                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource StudioMenuItemStyle}" />
                <Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource StudioContextMenuStyle}" />
                <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource StudioToolTipStyle}" />
            </avalonDock:DockingManager.Resources>

            <!--Behaviors-->
            <dxmvvm:Interaction.Behaviors>
                <docking:AvalonDockLayoutSerializer />
                <docking:AvalonDockDockingService ActiveContent="{Binding SelectedItem}" />
            </dxmvvm:Interaction.Behaviors>

            <!--LayoutInitializer-->
            <avalonDock:DockingManager.LayoutUpdateStrategy>
                <studio:LayoutInitializer />
            </avalonDock:DockingManager.LayoutUpdateStrategy>

            <!--TemplateSelector-->
            <avalonDock:DockingManager.LayoutItemTemplateSelector>
                <docking:PanesTemplateSelector />
            </avalonDock:DockingManager.LayoutItemTemplateSelector>

            <!--StyleSelector-->
            <avalonDock:DockingManager.LayoutItemContainerStyleSelector>
                <docking:PanesStyleSelector />
            </avalonDock:DockingManager.LayoutItemContainerStyleSelector>

            <!--LayoutRoot-->
            <avalonDock:LayoutRoot>
                <avalonDock:LayoutPanel Orientation="Vertical">
                    <avalonDock:LayoutPanel Orientation="Horizontal">
                        <avalonDock:LayoutDocumentPane />
                    </avalonDock:LayoutPanel>
                </avalonDock:LayoutPanel>
            </avalonDock:LayoutRoot>
        </avalonDock:DockingManager>

        <!--StatusBar-->
        <ContentControl Grid.Row="2" studio:ViewBinder.Bind="{Binding StatusBar}" />
    </Grid>
</studio:StudioWindow>