<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--WindowIconTemplate-->
    <DataTemplate x:Key="WindowIconTemplate">
        <Grid Margin="6, 0, 3, 0" RenderOptions.BitmapScalingMode="HighQuality">
            <Rectangle Height="32" Width="32">
                <Rectangle.OpacityMask>
                    <ImageBrush ImageSource="{DynamicResource AppIcon}" />
                </Rectangle.OpacityMask>

                <Rectangle.Style>
                    <Style TargetType="{x:Type Rectangle}">
                        <Setter Property="Fill" Value="{DynamicResource Focused}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{DXBinding '@a($metro:MetroWindow).IsKeyboardFocusWithin'}" Value="False">
                                <Setter Property="Fill" Value="{DXBinding '@a($metro:MetroWindow).TitleForeground'}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Rectangle.Style>
            </Rectangle>
        </Grid>
    </DataTemplate>

    <!--WindowIconTemplateLight-->
    <DataTemplate x:Key="WindowIconTemplateLight">
        <Grid Margin="6, 0, 3, 0" RenderOptions.BitmapScalingMode="HighQuality">
            <Rectangle Height="32" Width="32" Fill="{DynamicResource Backstage.Foreground}">
                <Rectangle.OpacityMask>
                    <ImageBrush ImageSource="{DynamicResource AppIcon}" />
                </Rectangle.OpacityMask>
            </Rectangle>
        </Grid>
    </DataTemplate>

    <!--ButtonLightweightTemplate-->
    <ControlTemplate x:Key="ButtonLightweightTemplate" TargetType="{x:Type ButtonBase}">
        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource HoverBackground}" x:Uid="@Value=HoverBackground" />
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Border}" x:Uid="@Value=Border" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource SelectionBackground}" x:Uid="@Value=SelectionBackground" />
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Border}" x:Uid="@Value=Border" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource SelectionBackground}" x:Uid="@Value=SelectionBackground" />
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Border}" x:Uid="@Value=Border" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Focused}" x:Uid="@Value=Focused" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="border" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>