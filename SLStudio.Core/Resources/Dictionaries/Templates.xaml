<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--WindowIconTemplate-->
    <DataTemplate x:Key="WindowIconTemplate">
        <Grid Margin="6, 0, 3, 0" RenderOptions.BitmapScalingMode="HighQuality">
            <Rectangle Height="32" Width="32">
                <Rectangle.OpacityMask>
                    <ImageBrush ImageSource="{DynamicResource AppIcon}" />
                </Rectangle.OpacityMask>

                <Rectangle.Style>
                    <Style TargetType="{x:Type Rectangle}">
                        <Setter Property="Fill" Value="{DynamicResource Focused}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{DXBinding '@a($metro:MetroWindow).IsKeyboardFocusWithin'}" Value="False">
                                <Setter Property="Fill" Value="{DXBinding '@a($metro:MetroWindow).TitleForeground'}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Rectangle.Style>
            </Rectangle>
        </Grid>
    </DataTemplate>

    <!--WindowIconTemplateLight-->
    <DataTemplate x:Key="WindowIconTemplateLight">
        <Grid Margin="6, 0, 3, 0" RenderOptions.BitmapScalingMode="HighQuality">
            <Rectangle Height="32" Width="32" Fill="{DynamicResource Backstage.Foreground}">
                <Rectangle.OpacityMask>
                    <ImageBrush ImageSource="{DynamicResource AppIcon}" />
                </Rectangle.OpacityMask>
            </Rectangle>
        </Grid>
    </DataTemplate>

    <!--ButtonLightweightTemplate-->
    <ControlTemplate x:Key="ButtonLightweightTemplate" TargetType="{x:Type ButtonBase}">
        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource HoverBackground}" />
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Border}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource SelectionBackground}" />
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Border}"  />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource SelectionBackground}" />
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Border}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Focused}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="border" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--ComboxBoxReadOnlyModeTemplate-->
    <ControlTemplate x:Key="ComboxBoxReadOnlyModeTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="Root">
            <Grid x:Name="PART_Editor">
                <Border x:Name="IsDefault" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="ColumnField" Width="*" />
                        <ColumnDefinition x:Name="ColumnButton" Width="16" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Content" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Grid.Column="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                </Grid>
                <ToggleButton x:Name="DropDownButton" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource ComboBoxDropDownButtonStyle}" />
                <Border x:Name="IsFocus" BorderBrush="{DynamicResource Focused}" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0"/>
            </Grid>
            <Popup x:Name="PART_Popup" AllowsTransparency="True" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" Placement="Bottom">
                <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Root}">
                    <Border x:Name="DropDownBorder" Background="{DynamicResource Editor.Background}" BorderBrush="{DynamicResource Border}" BorderThickness="1">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" Margin="1" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Opacity" TargetName="IsDefault" Value="1" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="Root" Value="0.38" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>