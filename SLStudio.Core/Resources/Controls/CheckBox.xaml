<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--StudioCheckBoxStyle-->
    <Style x:Key="StudioCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="{DynamicResource Editor.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0, 3, 0, 3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="Root" Background="Transparent" Margin="{TemplateBinding Padding}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Grid x:Name="Field" Grid.Column="0" Grid.ColumnSpan="1"
                              Margin="0, 1, 0, 1" Height="14" Width="14"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Border x:Name="IsDefault"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" />

                            <Border x:Name="IsFocused"  Opacity="0"
                                    BorderBrush="{DynamicResource Focused}"
                                    BorderThickness="{TemplateBinding BorderThickness}" />

                            <Path x:Name="Indeterminate" Visibility="Collapsed"
                                  Style="{DynamicResource UIShape.Indeterminate}" />

                            <Path x:Name="Checked" Visibility="Collapsed"
                                  Style="{DynamicResource UIShape.Checked}" />
                        </Grid>

                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Grid.ColumnSpan="1"
                                          Margin="4, 0, 0, 0" RecognizesAccessKey="True"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="IsFocused" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="Checked" Value="{DynamicResource HoverForeground}" />
                            <Setter Property="Fill" TargetName="Indeterminate" Value="{DynamicResource HoverForeground}" />
                            <Setter Property="Background" TargetName="IsDefault" Value="{DynamicResource HoverBackground}" />
                            <Setter Property="BorderBrush" TargetName="IsDefault" Value="{DynamicResource SelectionBorder}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="Checked" Value="{DynamicResource SelectionForeground}" />
                            <Setter Property="Fill" TargetName="Indeterminate" Value="{DynamicResource SelectionForeground}" />
                            <Setter Property="Background" TargetName="IsDefault" Value="{DynamicResource SelectionBackground}" />
                            <Setter Property="BorderBrush" TargetName="IsDefault" Value="{DynamicResource SelectionBorder}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Opacity" TargetName="IsFocused" Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="IsFocused" Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="IsFocused" Value="1" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Root" Value="{DynamicResource DisabledOpacity}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="Checked" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="Indeterminate" Value="Visible" />
                        </Trigger>
                        <Trigger Property="FlowDirection" Value="RightToLeft">
                            <Setter Property="LayoutTransform" TargetName="Field">
                                <Setter.Value>
                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="-1" ScaleY="1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>