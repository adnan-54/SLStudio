<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:studio="clr-namespace:SLStudio.Core"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--WindowButtonsLigthStyle-->
    <Style x:Key="WindowButtonsLigthStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.MetroWindow.Light}">
        <Setter Property="Foreground" Value="{DXBinding '@a($metro:MetroWindow).TitleForeground'}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Foreground}" />
                <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoverBackground}" />
                <Setter Property="Foreground" Value="{StaticResource HoverForeground}" />
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Backstage.Window.Background}" />
                <Setter Property="Foreground" Value="{StaticResource Backstage.Foreground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--WindowButtonsDarkStyle-->
    <Style x:Key="WindowButtonsDarkStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.MetroWindow.Dark}">
        <Setter Property="Foreground" Value="{DXBinding '@a($metro:MetroWindow).TitleForeground'}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Foreground}" />
                <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoverBackground}" />
                <Setter Property="Foreground" Value="{StaticResource HoverForeground}" />
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Backstage.Window.Background}" />
                <Setter Property="Foreground" Value="{StaticResource Backstage.Foreground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--WindowButtonsStyle-->
    <Style x:Key="WindowButtonsStyle" TargetType="{x:Type metro:WindowButtonCommands}"
           BasedOn="{StaticResource MahApps.Styles.WindowButtonCommands.Win10}">
        <Setter Property="Template" Value="{StaticResource MahApps.Templates.WindowButtonCommands.Win10}" />
        <Setter Property="LightMinButtonStyle" Value="{StaticResource WindowButtonsLigthStyle}" />
        <Setter Property="LightMaxButtonStyle" Value="{StaticResource WindowButtonsLigthStyle}" />
        <Setter Property="LightCloseButtonStyle" Value="{StaticResource WindowButtonsLigthStyle}" />
        <Setter Property="DarkMinButtonStyle" Value="{StaticResource WindowButtonsDarkStyle}" />
        <Setter Property="DarkMaxButtonStyle" Value="{StaticResource WindowButtonsDarkStyle}" />
        <Setter Property="DarkCloseButtonStyle" Value="{StaticResource WindowButtonsDarkStyle}" />
    </Style>

    <!--DefaultWindowButtons-->
    <metro:WindowButtonCommands x:Key="DefaultWindowButtons" Style="{StaticResource WindowButtonsStyle}" x:Shared="False" />

    <!--StudioWindowStyle-->
    <Style x:Key="StudioWindowStyle" TargetType="{x:Type metro:MetroWindow}" BasedOn="{StaticResource MahApps.Styles.MetroWindow.Clean}">
        <Setter Property="WindowButtonCommands" Value="{StaticResource DefaultWindowButtons}" />
        <Setter Property="WindowTitleBrush" Value="Transparent" />
        <Setter Property="NonActiveWindowTitleBrush" Value="Transparent" />
        <Setter Property="TitleForeground" Value="{StaticResource Foreground}" />
        <Setter Property="Foreground" Value="{StaticResource Foreground}" />
        <Setter Property="Background" Value="{StaticResource Window.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource Focused}" />
        <Setter Property="NonActiveBorderBrush" Value="{StaticResource Border}" />
        <Setter Property="GlowBrush" Value="{StaticResource Focused}" />
        <Setter Property="NonActiveGlowBrush" Value="{StaticResource Border}" />
        <Setter Property="SaveWindowPosition" Value="True" />
        <Setter Property="WindowTransitionsEnabled" Value="False" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="WindowTransitionsEnabled" Value="False" />
        <Setter Property="TryToBeFlickerFree" Value="True" />
        <Setter Property="ShowActivated" Value="True"/>
        <Setter Property="TitleAlignment" Value="Center" />
        <Setter Property="TitleCharacterCasing" Value="Normal" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="WindowState" Value="Maximized" />
        <Setter Property="studio:WpfHelpers.WindowStartupLocation" Value="CenterScreen" />
        <Setter Property="IconTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Margin="6, 0, 3, 0" RenderOptions.BitmapScalingMode="HighQuality">
                        <Rectangle Height="32" Width="32">
                            <Rectangle.OpacityMask>
                                <ImageBrush ImageSource="{StaticResource AppIcon}" />
                            </Rectangle.OpacityMask>

                            <Rectangle.Style>
                                <Style TargetType="{x:Type Rectangle}">
                                    <Setter Property="Fill" Value="{StaticResource Focused}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{DXBinding '@a($metro:MetroWindow).IsKeyboardFocusWithin'}" Value="False">
                                            <Setter Property="Fill" Value="{DXBinding '@a($metro:MetroWindow).TitleForeground'}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Rectangle.Style>
                        </Rectangle>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="False">
                <Setter Property="TitleForeground" Value="{StaticResource MahApps.Brushes.SemiTransparent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--DialogWindowStyle-->
    <Style x:Key="DialogWindowStyle" TargetType="{x:Type metro:MetroWindow}" BasedOn="{StaticResource StudioWindowStyle}">
        <Setter Property="ShowInTaskbar" Value="False" />
        <Setter Property="ResizeMode" Value="CanResize" />
        <Setter Property="WindowState" Value="Normal" />
        <Setter Property="SaveWindowPosition" Value="False" />
        <Setter Property="TitleAlignment" Value="Left" />
        <Setter Property="studio:WpfHelpers.WindowStartupLocation" Value="CenterOwner" />
    </Style>
</ResourceDictionary>