<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:converters="http://metro.mahapps.com/winfx/xaml/shared"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <converters:CornerRadiusBindingConverter x:Key="CornerRadiusBindingConverter" />

    <!--StudioErrorValidationTemplate-->
    <ControlTemplate x:Key="StudioErrorValidationTemplate">
        <AdornedElementPlaceholder x:Name="placeholder">
            <Grid SnapsToDevicePixels="True">
                <Rectangle x:Name="PopupTargetElement"
                           Margin="-5, -1" StrokeThickness="0"
                           DataContext="{Binding ElementName=placeholder}" />
                <Border x:Name="ValidationErrorElement" CornerRadius="1"
                        DataContext="{Binding ElementName=placeholder}"
                        BorderBrush="{StaticResource Custom.Red}"
                        BorderThickness="{Binding ElementName=placeholder, Path=AdornedElement.BorderThickness, FallbackValue=1, TargetNullValue=1}" />

                <metro:CustomValidationPopup x:Name="ValidationPopup"
                                             AllowsTransparency="True" IsOpen="False"
                                             AdornedElement="{Binding ElementName=placeholder, Path=AdornedElement, Mode=OneWay}"
                                             PlacementTarget="{Binding ElementName=PopupTargetElement, Mode=OneWay}">
                    <Grid x:Name="Root" Margin="5">
                        <Grid.Resources>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=Root, Path=IsMouseOver, Mode=OneWay}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.15" Duration="0:0:0.1" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>

                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Resources>

                        <Border CornerRadius="3" Background="{StaticResource Custom.Red}"
                                Effect="{StaticResource LightShadowEffect}">
                            <Border.Resources>
                                <DataTemplate DataType="{x:Type ValidationError}">
                                    <TextBlock Margin="8, 4, 8, 4" MaxWidth="250"
                                               TextWrapping="Wrap"
                                               UseLayoutRounding="False"
                                               Text="{Binding ErrorContent}"
                                               Foreground="{StaticResource SelectionForeground}" />
                                </DataTemplate>
                            </Border.Resources>

                            <ItemsControl ItemsSource="{Binding}" />
                        </Border>
                    </Grid>
                </metro:CustomValidationPopup>
            </Grid>
        </AdornedElementPlaceholder>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=placeholder, Path=AdornedElement.BorderThickness, FallbackValue=0, TargetNullValue=0}" Value="0">
                <Setter TargetName="ValidationErrorElement" Property="BorderThickness" Value="1" />
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=ValidationPopup, Path=CanShow, Mode=OneWay}" Value="True" />
                    <Condition Binding="{Binding ElementName=placeholder, Path=AdornedElement.IsKeyboardFocusWithin, Mode=OneWay}" Value="True" />
                    <Condition Binding="{Binding ElementName=placeholder, Path=AdornedElement.(Validation.HasError), Mode=OneWay}" Value="True" />
                </MultiDataTrigger.Conditions>

                <Setter TargetName="ValidationPopup" Property="IsOpen" Value="True" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=RedTriangle, Path=IsMouseOver, Mode=OneWay}" Value="True" />
                    <Condition Binding="{Binding ElementName=placeholder, Path=AdornedElement.(Validation.HasError), Mode=OneWay}" Value="True" />
                    <Condition Binding="{Binding ElementName=placeholder, Path=AdornedElement.(metro:ValidationHelper.ShowValidationErrorOnMouseOver), Mode=OneWay}" Value="True" />
                </MultiDataTrigger.Conditions>

                <Setter TargetName="ValidationPopup" Property="IsOpen" Value="True" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=RedTriangle, Path=IsMouseOver, Mode=OneWay}" Value="True" />
                    <Condition Binding="{Binding ElementName=placeholder, Path=AdornedElement.(Validation.HasError), Mode=OneWay}" Value="True" />
                    <Condition Binding="{Binding ElementName=ValidationPopup, Path=ShowValidationErrorOnMouseOver, Mode=OneWay}" Value="True" />
                </MultiDataTrigger.Conditions>

                <Setter TargetName="ValidationPopup" Property="IsOpen" Value="True" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>