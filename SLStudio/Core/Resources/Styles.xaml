<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:editor="http://icsharpcode.net/sharpdevelop/avalonedit"
                    xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:ae="http://icsharpcode.net/sharpdevelop/avalonedit"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:resx="clr-namespace:SLStudio.Core.Resources.Strings">

    <!--CleanWindowStyle-->
    <Style x:Key="CleanWindowStyle" TargetType="{x:Type metro:MetroWindow}">
        <Setter Property="Icon" Value="pack://application:,,,/Core/Resources/Images/logo.png" />
        <Setter Property="WindowButtonCommands" Value="{DynamicResource DefaultWindowButtons}" />
        <Setter Property="IconTemplate" Value="{DynamicResource WindowIconTemplate}" />
        <Setter Property="WindowTitleBrush" Value="{DynamicResource MahApps.Brushes.SemiTransparentWhite}" />
        <Setter Property="NonActiveWindowTitleBrush" Value="{DynamicResource MahApps.Brushes.TransparentWhite}" />
        <Setter Property="TitleForeground" Value="{DynamicResource MahApps.Brushes.Black}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Black}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
        <Setter Property="NonActiveBorderBrush" Value="{DynamicResource MahApps.Brushes.Accent2}" />
        <Setter Property="GlowBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
        <Setter Property="NonActiveGlowBrush" Value="{DynamicResource MahApps.Brushes.Accent2}" />
        <Setter Property="SaveWindowPosition" Value="True" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="MinWidth" Value="800" />
        <Setter Property="MinHeight" Value="600" />
        <Setter Property="TitleAlignment" Value="Center" />
        <Setter Property="TitleCharacterCasing" Value="Normal" />
        <Setter Property="BorderThickness" Value="1" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}" Value="False">
                <Setter Property="TitleForeground" Value="{DynamicResource MahApps.Brushes.Badged.DisabledBackground}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--WindowButtonsStyle-->
    <Style x:Key="WindowButtonsStyle" TargetType="{x:Type metro:WindowButtonCommands}"
           BasedOn="{StaticResource MahApps.Styles.WindowButtonCommands.Win10}">
        <Setter Property="Template" Value="{DynamicResource MahApps.Templates.WindowButtonCommands.Win10}" />
        <Setter Property="LightMinButtonStyle" Value="{DynamicResource WindowButtonsLigthStyle}" />
        <Setter Property="LightMaxButtonStyle" Value="{DynamicResource WindowButtonsLigthStyle}" />
        <Setter Property="LightCloseButtonStyle" Value="{DynamicResource WindowButtonsLigthStyle}" />
        <Setter Property="DarkMinButtonStyle" Value="{DynamicResource WindowButtonsDarkStyle}" />
        <Setter Property="DarkMaxButtonStyle" Value="{DynamicResource WindowButtonsDarkStyle}" />
        <Setter Property="DarkCloseButtonStyle" Value="{DynamicResource WindowButtonsDarkStyle}" />
    </Style>

    <!--WindowButtonsLigthStyle-->
    <Style x:Key="WindowButtonsLigthStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.MetroWindow.Light}">
        <Setter Property="Foreground" Value="{Binding TitleForeground, RelativeSource={RelativeSource AncestorType=metro:MetroWindow}}" />
    </Style>

    <!--WindowButtonsDarkStyle-->
    <Style x:Key="WindowButtonsDarkStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.MetroWindow.Dark}">
        <Setter Property="Foreground" Value="{Binding TitleForeground, RelativeSource={RelativeSource AncestorType=metro:MetroWindow}}" />
    </Style>

    <!--StatusBarStyle-->
    <Style TargetType="{x:Type StatusBar}" BasedOn="{StaticResource MahApps.Styles.StatusBar}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
        <Setter Property="Height" Value="22" />
    </Style>

    <!--ChromelessToggleButtonStyle-->
    <Style x:Key="ChromelessToggleButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MahApps.Styles.Button.Chromeless}">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--AvalonEditStyle-->
    <Style TargetType="{x:Type ae:TextEditor}">
        <Setter Property="SyntaxHighlighting" Value="XML"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Consolas"/>
        <Setter Property="ShowLineNumbers" Value="True"/>
        <Setter Property="LineNumbersForeground" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Window.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Black}"/>
    </Style>
    
    <!--AvalonEditSearchBoxStyle-->
    <Style TargetType="{x:Type editor:SearchPanel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editor:SearchPanel}">
                    <Border BorderThickness="1, 1, 1, 4"  Cursor="Arrow" Padding="6"
                            HorizontalAlignment="Right" VerticalAlignment="Top"
                            BorderBrush="{DynamicResource MahApps.Brushes.AccentBase}"
                            Background="{DynamicResource MahApps.Brushes.Window.Background}">
                        <!--Content-->
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!--SearchBox-->
                            <TextBox Name="PART_searchTextBox" Grid.Row="0"
                                     VerticalContentAlignment="Center"
                                     Width="200"
                                     metro:TextBoxHelper.Watermark="{x:Static resx:StudioResources.Search}"
                                     metro:TextBoxHelper.ButtonCommand="editor:SearchCommands.FindNext"
                                     BorderBrush="{DynamicResource MahApps.Brushes.Accent2}"
                                     metro:TextBoxHelper.SelectAllOnFocus="True">
                                <TextBox.Text>
                                    <Binding Path="SearchPattern"
                                             RelativeSource="{RelativeSource TemplatedParent}"
                                             UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <ExceptionValidationRule />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MahApps.Styles.TextBox.Search}">
                                        <Setter Property="metro:ControlsHelper.FocusBorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
                                        <Setter Property="metro:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource MahApps.Brushes.Accent2}" />
                                    </Style>
                                </TextBox.Style>
                            </TextBox>

                            <StackPanel Grid.Row="1" HorizontalAlignment="Center"
                                        Orientation="Horizontal"
                                        Margin="{StaticResource SmallUpMargin}">

                                <!-- FindPrevious-->
                                <Button Margin="{DynamicResource SmallLeftMargin}"
                                        Command="editor:SearchCommands.FindPrevious"
                                        ToolTip="{x:Static resx:StudioResources.FindPrevious}" Height="24" Width="24"
                                        Padding="{DynamicResource SmallFullMargin}" Focusable="False"
                                        Style="{DynamicResource MahApps.Styles.Button.Chromeless}">
                                    <Image Source="{DynamicResource Previous}" />
                                </Button>

                                <!--FindNext-->
                                <Button Margin="{DynamicResource SmallLeftMargin}"
                                        Command="editor:SearchCommands.FindNext"
                                        ToolTip="{x:Static resx:StudioResources.FindNext}" Height="24" Width="24"
                                        Padding="{DynamicResource SmallFullMargin}" Focusable="False"
                                        Style="{DynamicResource MahApps.Styles.Button.Chromeless}">
                                    <Image Source="{DynamicResource Next}" />
                                </Button>

                                <!--MatchCase-->
                                <ToggleButton Margin="{DynamicResource LargeLeftMargin}"
                                              Height="24" Width="24" Padding="{DynamicResource SmallFullMargin}"
                                              ToolTip="{x:Static resx:StudioResources.MatchCase}" Focusable="False"
                                              IsChecked="{Binding MatchCase, RelativeSource={RelativeSource TemplatedParent}}"
                                              Style="{DynamicResource ChromelessToggleButtonStyle}">
                                    <Image Source="{DynamicResource CaseSensitive}" />
                                </ToggleButton>

                                <!--WholeWords-->
                                <ToggleButton Margin="{DynamicResource SmallLeftMargin}"
                                              Height="24" Width="24" Padding="{DynamicResource SmallFullMargin}"
                                              ToolTip="{x:Static resx:StudioResources.MatchWholeWord}" Focusable="False"
                                              IsChecked="{Binding WholeWords, RelativeSource={RelativeSource TemplatedParent}}"
                                              Style="{DynamicResource ChromelessToggleButtonStyle}">
                                    <Image Source="{DynamicResource WholeWord}" />
                                </ToggleButton>

                                <!--UseRegex-->
                                <ToggleButton Margin="{DynamicResource SmallLeftMargin}"
                                              Height="24" Width="24" Padding="{DynamicResource SmallFullMargin}"
                                              ToolTip="{x:Static resx:StudioResources.UseRegularExpressions}" Focusable="False"
                                              IsChecked="{Binding UseRegex, RelativeSource={RelativeSource TemplatedParent}}"
                                              Style="{DynamicResource ChromelessToggleButtonStyle}">
                                    <Image Source="{DynamicResource RegularExpression}" />
                                </ToggleButton>

                                <!-- CloseButton -->
                                <Button Margin="{DynamicResource LargeLeftMargin}"
                                        Command="editor:SearchCommands.CloseSearchPanel"
                                        ToolTip="{x:Static resx:StudioResources.Close}" Height="20" Width="20" Focusable="False"
                                        Padding="{DynamicResource SmallFullMargin}"
                                        HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                        HorizontalAlignment="Center" VerticalAlignment="Center"
                                        Style="{DynamicResource MahApps.Styles.Button.Chromeless}">
                                    <Path Fill="Red" Stretch="Uniform"
                                          Data="F1M54.0573,47.8776L38.1771,31.9974 54.0547,16.1198C55.7604,14.4141 55.7604,11.6511 54.0573,9.94531 52.3516,8.23962 49.5859,8.23962 47.8802,9.94531L32.0026,25.8229 16.1224,9.94531C14.4167,8.23962 11.6511,8.23962 9.94794,9.94531 8.24219,11.6511 8.24219,14.4141 9.94794,16.1198L25.8255,32 9.94794,47.8776C8.24219,49.5834 8.24219,52.3477 9.94794,54.0534 11.6511,55.7572 14.4167,55.7585 16.1224,54.0534L32.0026,38.1745 47.8802,54.0534C49.5859,55.7585 52.3516,55.7572 54.0573,54.0534 55.7604,52.3477 55.763,49.5834 54.0573,47.8776z" />
                                </Button>
                            </StackPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--SimpleSliderStyle-->
    <Style x:Key="SimpleSliderStyle" TargetType="{x:Type Slider}" BasedOn="{StaticResource MahApps.Styles.Slider}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Opacity" Value="0.8"/>
        <Setter Property="metro:SliderHelper.ThumbFillBrush" Value="{DynamicResource MahApps.Brushes.IdealForeground}"/>
        <Setter Property="metro:SliderHelper.ThumbFillHoverBrush" Value="{DynamicResource MahApps.Brushes.IdealForeground}"/>
        <Setter Property="metro:SliderHelper.ThumbFillPressedBrush" Value="{DynamicResource MahApps.Brushes.IdealForeground}"/>
        <Setter Property="metro:SliderHelper.TrackFillBrush" Value="{DynamicResource MahApps.Brushes.IdealForeground}"/>
        <Setter Property="metro:SliderHelper.TrackFillHoverBrush" Value="{DynamicResource MahApps.Brushes.IdealForeground}"/>
        <Setter Property="metro:SliderHelper.TrackFillPressedBrush" Value="{DynamicResource MahApps.Brushes.IdealForeground}"/>
        <Setter Property="metro:SliderHelper.TrackValueFillBrush" Value="{DynamicResource MahApps.Brushes.IdealForeground}"/>
        <Setter Property="metro:SliderHelper.TrackValueFillHoverBrush" Value="{DynamicResource MahApps.Brushes.IdealForeground}"/>
        <Setter Property="metro:SliderHelper.TrackValueFillPressedBrush" Value="{DynamicResource MahApps.Brushes.IdealForeground}"/>
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>
</ResourceDictionary>