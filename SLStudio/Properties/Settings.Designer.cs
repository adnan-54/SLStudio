//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SLStudio.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.2.0.0")]
    public sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool showStartScreen {
            get {
                return ((bool)(this["showStartScreen"]));
            }
            set {
                this["showStartScreen"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<ArrayOfString xmlns:xsi=\"http://www.w3." +
            "org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" />")]
        public global::System.Collections.Specialized.StringCollection recentFilesList {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["recentFilesList"]));
            }
            set {
                this["recentFilesList"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("default")]
        public string themeDefaultName {
            get {
                return ((string)(this["themeDefaultName"]));
            }
            set {
                this["themeDefaultName"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("en-us")]
        public string languageDefault {
            get {
                return ((string)(this["languageDefault"]));
            }
            set {
                this["languageDefault"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 82, 175")]
        public global::System.Drawing.Color borders {
            get {
                return ((global::System.Drawing.Color)(this["borders"]));
            }
            set {
                this["borders"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 82, 175")]
        public global::System.Drawing.Color bordersDark {
            get {
                return ((global::System.Drawing.Color)(this["bordersDark"]));
            }
            set {
                this["bordersDark"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 82, 175")]
        public global::System.Drawing.Color bordersLight {
            get {
                return ((global::System.Drawing.Color)(this["bordersLight"]));
            }
            set {
                this["bordersLight"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("229, 20, 0")]
        public global::System.Drawing.Color error {
            get {
                return ((global::System.Drawing.Color)(this["error"]));
            }
            set {
                this["error"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("12, 12, 12")]
        public global::System.Drawing.Color font {
            get {
                return ((global::System.Drawing.Color)(this["font"]));
            }
            set {
                this["font"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("DarkGray")]
        public global::System.Drawing.Color fontDark {
            get {
                return ((global::System.Drawing.Color)(this["fontDark"]));
            }
            set {
                this["fontDark"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("White")]
        public global::System.Drawing.Color fontLight {
            get {
                return ((global::System.Drawing.Color)(this["fontLight"]));
            }
            set {
                this["fontLight"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("27, 161, 226")]
        public global::System.Drawing.Color info {
            get {
                return ((global::System.Drawing.Color)(this["info"]));
            }
            set {
                this["info"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 102, 204")]
        public global::System.Drawing.Color link {
            get {
                return ((global::System.Drawing.Color)(this["link"]));
            }
            set {
                this["link"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("28, 151, 234")]
        public global::System.Drawing.Color selection {
            get {
                return ((global::System.Drawing.Color)(this["selection"]));
            }
            set {
                this["selection"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 122, 204")]
        public global::System.Drawing.Color selectionDark {
            get {
                return ((global::System.Drawing.Color)(this["selectionDark"]));
            }
            set {
                this["selectionDark"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("100, 180, 255")]
        public global::System.Drawing.Color selectionLight {
            get {
                return ((global::System.Drawing.Color)(this["selectionLight"]));
            }
            set {
                this["selectionLight"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("28, 151, 234")]
        public global::System.Drawing.Color style {
            get {
                return ((global::System.Drawing.Color)(this["style"]));
            }
            set {
                this["style"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("238, 238, 242")]
        public global::System.Drawing.Color theme {
            get {
                return ((global::System.Drawing.Color)(this["theme"]));
            }
            set {
                this["theme"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("195, 195, 198")]
        public global::System.Drawing.Color themeDark {
            get {
                return ((global::System.Drawing.Color)(this["themeDark"]));
            }
            set {
                this["themeDark"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("White")]
        public global::System.Drawing.Color themeLight {
            get {
                return ((global::System.Drawing.Color)(this["themeLight"]));
            }
            set {
                this["themeLight"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("255, 204, 0")]
        public global::System.Drawing.Color warning {
            get {
                return ((global::System.Drawing.Color)(this["warning"]));
            }
            set {
                this["warning"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("LightGray")]
        public global::System.Drawing.Color workspace {
            get {
                return ((global::System.Drawing.Color)(this["workspace"]));
            }
            set {
                this["workspace"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("DarkGray")]
        public global::System.Drawing.Color workspaceDark {
            get {
                return ((global::System.Drawing.Color)(this["workspaceDark"]));
            }
            set {
                this["workspaceDark"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("WhiteSmoke")]
        public global::System.Drawing.Color workspaceLight {
            get {
                return ((global::System.Drawing.Color)(this["workspaceLight"]));
            }
            set {
                this["workspaceLight"] = value;
            }
        }
    }
}
