<UserControl x:Class="SLStudio.RpkEditor.Modules.RdfEditor.Views.RdfEditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:studioBehaviors="clr-namespace:SLStudio.Core.Behaviors;assembly=SLStudio.Core"
             xmlns:studio="clr-namespace:SLStudio.Core;assembly=SLStudio.Core"
             xmlns:converters="clr-namespace:SLStudio.RpkEditor.Converters"
             xmlns:md="https://github.com/fantasticfiasco/mvvm-dialogs"
             xmlns:gong="urn:gong-wpf-dragdrop"
             mc:Ignorable="d" md:DialogServiceViews.IsRegistered="True"
             Background="{StaticResource Control.Background}"
             d:DesignHeight="450" d:DesignWidth="800">
    <xctk:BusyIndicator IsBusy="{Binding IsBusy}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!--InputBindings-->
            <Grid.InputBindings>
                <KeyBinding Key="S" Modifiers="Alt" Command="{DXCommand '@e(searchBox).Focus()'}" />
                <KeyBinding Key="S" Modifiers="Ctrl" Command="{DXCommand 'Save()'}" />
                <KeyBinding Key="R" Modifiers="Ctrl" Command="{DXCommand 'AddNew()'}" />
            </Grid.InputBindings>

            <!--Infos-->
            <Border Grid.Row="0" Padding="{StaticResource FullMargin}"
                    BorderThickness="0, 0, 0, 1"
                    BorderBrush="{StaticResource Border}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <!--Path-->
                    <Grid Grid.Column="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" VerticalAlignment="Center" Text="Path" />

                        <TextBox Grid.Column="1" Margin="{StaticResource LeftMargin}"
                                 Text="{Binding Path, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>

                    <!--Alias-->
                    <Grid Grid.Column="1" Margin="{StaticResource LargeLeftMargin}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" VerticalAlignment="Center"
                                   Text="Alias" />

                        <TextBox Grid.Column="1" Margin="{StaticResource LeftMargin}"
                                 Text="{Binding Alias, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>

                    <!--Version-->
                    <Grid Grid.Column="2" Margin="{StaticResource LargeLeftMargin}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" VerticalAlignment="Center"
                                   Text="Version" />

                        <ComboBox Grid.Column="1" Margin="{StaticResource LeftMargin}"
                                  IsEditable="True"
                                  Text="{Binding TargetVersion, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>
                </Grid>
            </Border>

            <!--Search-->
            <TextBox x:Name="searchBox" Grid.Row="1" Margin="{StaticResource UpMargin}"
                     Text="{Binding SearchTerm, UpdateSourceTrigger=PropertyChanged, Delay=500}"
                     Style="{StaticResource StudioSearchTextBoxStyle}"
                     studio:WpfHelpers.Watermark="Search (Alt+S)" />

            <!--Definitions-->
            <ListBox Grid.Row="2"
                     ItemsSource="{Binding Metadatas}"
                     BorderThickness="0" SelectionMode="Extended"
                     ScrollViewer.CanContentScroll="False"
                     gong:DragDrop.IsDragSource="True"
                     gong:DragDrop.IsDropTarget="True"
                     gong:DragDrop.UseDefaultDragAdorner="True"
                     gong:DragDrop.SelectDroppedItems="True">
                <!--Behaviors-->
                <dxmvvm:Interaction.Behaviors>
                    <dxmvvm:FocusBehavior />
                    <studioBehaviors:ListBoxSelectionBehavior />
                </dxmvvm:Interaction.Behaviors>

                <!--InputBindings-->
                <ListBox.InputBindings>
                    <KeyBinding Key="C" Modifiers="Ctrl" Command="{DXCommand 'OnCopy()'}" />
                    <KeyBinding Key="V" Modifiers="Ctrl" Command="{DXCommand 'OnPaste()'}" />
                    <KeyBinding Key="X" Modifiers="Ctrl" Command="{DXCommand 'OnCut()'}" />
                    <KeyBinding Key="Up" Modifiers="Alt" Command="{DXCommand 'MoveUp()'}" />
                    <KeyBinding Key="Down" Modifiers="Alt" Command="{DXCommand 'MoveDown()'}" />
                    <KeyBinding Key="Delete" Command="{DXCommand 'RemoveSelected()'}" />
                    <KeyBinding Key="Return" Command="{DXCommand 'EditSelected()'}" />
                </ListBox.InputBindings>

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Background="Transparent" Height="35">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!--InputBindings-->
                            <Grid.InputBindings>
                                <MouseBinding MouseAction="LeftDoubleClick" Command="{DXCommand '@a($ListBox).DataContext.EditItem(@c)'}" />
                            </Grid.InputBindings>

                            <!--Icon-->
                            <Image Grid.Column="0" Margin="{StaticResource SmallLeftMargin}"
                                   Source="{Binding Icon, Converter={StaticResource ImageSourceConverter}}" Height="32" />

                            <!--NameAndDescription-->
                            <Grid Grid.Column="1" Margin="{StaticResource LargeLeftMargin}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Row="0" FontSize="16">
                                    <Run Text="{Binding Alias}" />
                                </TextBlock>

                                <TextBlock Grid.Row="1">
                                    <Run Text="{Binding TypeOfEntry, Mode=OneWay}" /> -
                                    <Run Text="{Binding TypeId, Converter={converters:IntToHexIdConverter}}" />
                                </TextBlock>
                            </Grid>

                            <!--Remove-->
                            <Button Grid.Column="2"
                                    ToolTip="Remove (Delete)" Height="18"
                                    IsTabStop="False" Focusable="False"
                                    Command="{DXCommand '@a($ListBox).DataContext.RemoveItem(@c)'}"
                                    Style="{StaticResource MahApps.Styles.Button.Chromeless}"
                                    metro:VisibilityHelper.IsVisible="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Grid}}">
                                <Image Source="{StaticResource Trash}" />
                            </Button>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>

                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>

            <!--AddNew-->
            <Button Grid.Row="3" ToolTip="Add New (Ctrl+R)"
                    Focusable="False" IsTabStop="False"
                    Command="{DXCommand 'AddNew()'}">
                <StackPanel Orientation="Horizontal">
                    <Image Source="{StaticResource Add_Green}" Height="15" />

                    <TextBlock Margin="{StaticResource SmallLeftMargin}" Text="Add New" />
                </StackPanel>
            </Button>
        </Grid>
    </xctk:BusyIndicator>
</UserControl>